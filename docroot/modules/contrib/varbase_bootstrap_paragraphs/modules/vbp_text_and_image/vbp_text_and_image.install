<?php

/**
 * @file
 * Install, uninstall and update hooks for VBP text and image module.
 */

use Symfony\Component\Yaml\Yaml;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Config\StorageInterface;
use Drupal\Core\Config\FileStorage;
use Vardot\Entity\EntityDefinitionUpdateManager;
use Vardot\Installer\ModuleInstallerFactory;

/**
 * Implements hook_install().
 */
function vbp_text_and_image_install() {

  // Processer for install: in vbp_text_and_image.info.yml file.
  // ---------------------------------------------------------------------------.
  ModuleInstallerFactory::installList('vbp_text_and_image');

  // Install optional configs.
  ModuleInstallerFactory::importConfigsFromScanedDirectory('vbp_text_and_image', '/^field.storage.*\\.(yml)$/i');
  ModuleInstallerFactory::importConfigsFromScanedDirectory('vbp_text_and_image', '/^.*(settings.yml)$/i');

  // Add target bundle [text and image] to landing page components
  // (landing page paragraphs field) without changing old configurations.
  _add_target_bundle_text_and_image_to_landing_page_components();

  // Entity updates to clear up any mismatched entity and/or field definitions
  // And Fix changes were detected in the entity type and field definitions.
  \Drupal::classResolver()
    ->getInstanceFromDefinition(EntityDefinitionUpdateManager::class)
    ->applyUpdates();

}

/**
 * Add target bundle [text and image] to landing page components.
 *
 * (landing page paragraphs field) without changing old configurations.
 */
function _add_target_bundle_text_and_image_to_landing_page_components() {
  $site_config = \Drupal::configFactory()->getEditable('field.field.node.landing_page.field_lp_paragraphs');
  $config_data = $site_config->get();

  /* dependencies:
   * config:
   * - paragraphs.paragraphs_type.text_and_image
   */
  if (!isset($config_data['dependencies']['config']['paragraphs.paragraphs_type.text_and_image'])) {
    $config_data['dependencies']['config'][] = 'paragraphs.paragraphs_type.text_and_image';
  }

  /* settings:
   * handler_settings:
   * target_bundles:
   * text_and_image: text_and_image
   */
  if (!isset($config_data['settings']['handler_settings']['target_bundles']['text_and_image'])) {
    $config_data['settings']['handler_settings']['target_bundles']['text_and_image'] = 'text_and_image';
  }

  /* target_bundles_drag_drop
   * text_and_image:
   * enabled: true
   * weight: 32
   */
  if (!isset($config_data['settings']['handler_settings']['target_bundles_drag_drop']['text_and_image'])) {
    $config_data['settings']['handler_settings']['target_bundles_drag_drop']['text_and_image'] = [
      'enabled' => TRUE,
      'weight' => 32,
    ];
  }

  $site_config->setData($config_data)->save(TRUE);

}

/**
 * Issue #2904173: Changed [Background Color] in the Styling Settings to use.
 *
 * Use a set of Color set to choose with [Color boxes] with a general
 * color settings.
 */
function vbp_text_and_image_update_8001() {

  $module_path = Drupal::service('module_handler')->getModule('vbp_text_and_image')->getPath();
  $optional_install_path = $module_path . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;

  $configs['core.entity_form_display.paragraph.text_and_image.default'] = $optional_install_path . 'core.entity_form_display.paragraph.text_and_image.default.yml';

  foreach ($configs as $name => $config_path) {
    $data = (array) Yaml::parse($config_path);
    $config = \Drupal::configFactory()->getEditable($name);
    $config->setData($data)->save(TRUE);
  }
}

/**
 * Issue #3025036: Add target bundle [text and image] to landing page.
 *
 * Landing page components (landing page paragraphs field) without changing old
 * configurations.
 */
function vbp_text_and_image_update_8602() {
  _add_target_bundle_text_and_image_to_landing_page_components();
}

/**
 * Issue #3272278: Switch to use the Module Installer Factory.
 *
 * In the Varbase Bootstrap Paragraphs Text and Image module.
 */
function vbp_text_and_image_update_90001() {
  // Set the weight of the module after installation of list of modules.
  // To make sure that any hook or event subscriber workes after all used modules.
  ModuleInstallerFactory::setModuleWeightAfterInstallation('vbp_text_and_image');
}
